# packcheck-0.6.0
# You can use any of the options supported by packcheck as environment
# variables here.  See https://github.com/composewell/packcheck for all
# options and their explanation.

name: packcheck

#-----------------------------------------------------------------------------
# Events on which the build should be triggered
#-----------------------------------------------------------------------------

on:
  push:
    branches:
      - master
  pull_request:


#-----------------------------------------------------------------------------
# Build matrix
#-----------------------------------------------------------------------------

jobs:
  build:
    name: >-
      ${{ matrix.name }}
      ${{ matrix.command }}
      ${{ matrix.runner }}
      ${{ matrix.ghc_version }}
    env:
      # ------------------------------------------------------------------------
      # Common options
      # ------------------------------------------------------------------------
      # GHC_OPTIONS: "-Werror"
      CABAL_REINIT_CONFIG: y
      LC_ALL: C.UTF-8

      # ------------------------------------------------------------------------
      # What to build
      # ------------------------------------------------------------------------
      # DISABLE_TEST: "y"
      # DISABLE_BENCH: "y"
      # DISABLE_DOCS: "y"
      # DISABLE_SDIST_BUILD: "y"
      # DISABLE_SDIST_GIT_CHECK: "y"
      # DISABLE_DIST_CHECKS: "y"

      # ------------------------------------------------------------------------
      # Selecting tool versions
      # ------------------------------------------------------------------------
      GHCVER: ${{ matrix.ghc_version }}
      # RESOLVER: ${{ matrix.stack_resolver }}

      # ------------------------------------------------------------------------
      # stack options
      # ------------------------------------------------------------------------
      # Note requiring a specific version of stack using STACKVER may fail due to
      # github API limit while checking and upgrading/downgrading to the specific
      # version.
      #STACKVER: "1.6.5"
      #STACK_UPGRADE: "y"
      STACK_YAML: "stack.yaml"

      # ------------------------------------------------------------------------
      # cabal options
      # ------------------------------------------------------------------------
      CABAL_CHECK_RELAX: y
      CABAL_HACKAGE_MIRROR: "hackage.haskell.org:http://hackage.fpcomplete.com"
      CABAL_PROJECT: "cabal.project"

      # ------------------------------------------------------------------------
      # Where to find the required tools
      # ------------------------------------------------------------------------
      PATH: /opt/ghc/bin:/sbin:/usr/sbin:/bin:/usr/bin
      #TOOLS_DIR: /opt

      # ------------------------------------------------------------------------
      # Location of packcheck.sh (the shell script invoked to perform CI tests ).
      # ------------------------------------------------------------------------
      # You can either commit the packcheck.sh script at this path in your repo or
      # you can use it by specifying the PACKCHECK_REPO_URL option below in which
      # case it will be automatically copied from the packcheck repo to this path
      # during CI tests. In any case it is finally invoked from this path.
      PACKCHECK: "./packcheck.sh"
      # If you have not committed packcheck.sh in your repo at PACKCHECK
      # then it is automatically pulled from this URL.
      PACKCHECK_GITHUB_URL: "https://raw.githubusercontent.com/composewell/packcheck"
      PACKCHECK_GITHUB_COMMIT: "fa1374027e64a28254b4ac457f968f21fc689c7f"

      # ------------------------------------------------------------------------
      # Final build variables
      # ------------------------------------------------------------------------
      PACKCHECK_COMMAND: ${{ matrix.command }} ${{ matrix.pack_options }}

    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        # The reason we have name here is to force an additional config instead
        # of adding to an existing config while adding additional configs.
        # Look at <https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategymatrix>
        # for more info about adding matrix elements.
        # Adding any element to the list will increase the number of matrix
        # elemets proportional to the cross product.
        name: [ci]
        # Uncomment GHC versions you want the CI to run on.
        ghc_version:
          [ 8.10.3
          , 8.8.4
          , 8.6.5
          , 8.4.4
          ]
        command:
          [ cabal-v2
          , stack
          ]
        runner:
          [ ubuntu-latest
          , macos-latest
          ]
        include:
          # Additional ci matrix elements
          - name: ci
            command: stack
            runner: ubuntu-latest

          - name: ci
            ghc_version: 8.8.3
            command: cabal-v2
            runner: macos-latest

          - name: ci
            command: hlint
            runner: ubuntu-latest
            pack_options: >-
              HLINT_OPTIONS="lint"
              HLINT_TARGETS="src"

    steps:
    - uses: actions/checkout@v2

    - uses: haskell/actions/setup@v1
      if: ${{ matrix.name != 'hlint' }}
      with:
        ghc-version: ${{ matrix.ghc_version }}
        enable-stack: true
        stack-version: 'latest'
        cabal-version: 'latest'

    - uses: actions/cache@v2
      name: Cache common directories
      with:
        path: |
          ~/.cabal
          ~/.ghc
          ~/.local
          ~/.stack
        key: ${{ matrix.command }}-${{ matrix.ghc_version }}-${{ matrix.runner }}

    - name: Download packcheck
      run: |
        # Check for PACKCHECK_GITHUB_COMMIT
        if text -z "$PACKCHECK_GITHUB_COMMIT"
        then
            die "PACKCHECK_GITHUB_COMMIT is not specified."
        fi

        # Get packcheck if needed
        CURL=$(which curl)
        PACKCHECK_URL=${PACKCHECK_GITHUB_URL}/${PACKCHECK_GITHUB_COMMIT}/packcheck.sh
        if test ! -e "$PACKCHECK"; then $CURL -sL -o "$PACKCHECK" $PACKCHECK_URL; fi;
        chmod +x $PACKCHECK

    - name: Run packcheck
      run: |
        bash -c "$PACKCHECK $PACKCHECK_COMMAND"
